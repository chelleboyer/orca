"""Add project invitations table

Revision ID: 68528aa198fd
Revises: e4392fd7a1cb
Create Date: 2025-08-31 20:44:00.148842

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '68528aa198fd'
down_revision: Union[str, None] = 'e4392fd7a1cb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project_invitations',
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('invited_by', sa.UUID(), nullable=False),
    sa.Column('invited_user_id', sa.UUID(), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('sent_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('accepted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('declined_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email_sent', sa.Boolean(), nullable=False),
    sa.Column('email_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reminder_sent', sa.Boolean(), nullable=False),
    sa.Column('reminder_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("role IN ('facilitator', 'contributor', 'viewer')", name='check_invitation_role'),
    sa.CheckConstraint("status IN ('pending', 'accepted', 'declined', 'expired', 'cancelled')", name='check_invitation_status'),
    sa.CheckConstraint('expires_at > sent_at', name='check_invitation_expiry'),
    sa.CheckConstraint('message IS NULL OR char_length(message) <= 500', name='check_message_length'),
    sa.ForeignKeyConstraint(['invited_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['invited_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_invitations_email', 'project_invitations', ['email'], unique=False)
    op.create_index('idx_invitations_expires_at', 'project_invitations', ['expires_at'], unique=False)
    op.create_index('idx_invitations_project_id', 'project_invitations', ['project_id'], unique=False)
    op.create_index('idx_invitations_status', 'project_invitations', ['status'], unique=False)
    op.create_index('idx_invitations_token', 'project_invitations', ['token'], unique=False)
    op.create_index('idx_unique_pending_invitation', 'project_invitations', ['project_id', 'email', 'status'], unique=True, postgresql_where="status = 'pending'")
    op.create_index(op.f('ix_project_invitations_email'), 'project_invitations', ['email'], unique=False)
    op.create_index(op.f('ix_project_invitations_expires_at'), 'project_invitations', ['expires_at'], unique=False)
    op.create_index(op.f('ix_project_invitations_id'), 'project_invitations', ['id'], unique=False)
    op.create_index(op.f('ix_project_invitations_invited_by'), 'project_invitations', ['invited_by'], unique=False)
    op.create_index(op.f('ix_project_invitations_invited_user_id'), 'project_invitations', ['invited_user_id'], unique=False)
    op.create_index(op.f('ix_project_invitations_project_id'), 'project_invitations', ['project_id'], unique=False)
    op.create_index(op.f('ix_project_invitations_status'), 'project_invitations', ['status'], unique=False)
    op.create_index(op.f('ix_project_invitations_token'), 'project_invitations', ['token'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_project_invitations_token'), table_name='project_invitations')
    op.drop_index(op.f('ix_project_invitations_status'), table_name='project_invitations')
    op.drop_index(op.f('ix_project_invitations_project_id'), table_name='project_invitations')
    op.drop_index(op.f('ix_project_invitations_invited_user_id'), table_name='project_invitations')
    op.drop_index(op.f('ix_project_invitations_invited_by'), table_name='project_invitations')
    op.drop_index(op.f('ix_project_invitations_id'), table_name='project_invitations')
    op.drop_index(op.f('ix_project_invitations_expires_at'), table_name='project_invitations')
    op.drop_index(op.f('ix_project_invitations_email'), table_name='project_invitations')
    op.drop_index('idx_unique_pending_invitation', table_name='project_invitations', postgresql_where="status = 'pending'")
    op.drop_index('idx_invitations_token', table_name='project_invitations')
    op.drop_index('idx_invitations_status', table_name='project_invitations')
    op.drop_index('idx_invitations_project_id', table_name='project_invitations')
    op.drop_index('idx_invitations_expires_at', table_name='project_invitations')
    op.drop_index('idx_invitations_email', table_name='project_invitations')
    op.drop_table('project_invitations')
    # ### end Alembic commands ###
